service: seemy-github

frameworkVersion: '2'

useDotenv: true
plugins:
  - serverless-plugin-typescript
  - serverless-jetpack

custom:
  serverless-jetpack:
    mode: npm

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-2
  stage: production
  versionFunctions: false
  tags:
    seemyintegration: github
    seemycomponent: vcs
    service: seemy
  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "sqs:SendMessage"
        Resource: 
          - Fn::GetAtt:
            - PullRequestQueue
            - Arn
          - Fn::GetAtt:
            - IssueQueue
            - Arn
          - Fn::GetAtt:
            - RepoQueue
            - Arn
      - Effect: "Allow"
        Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        Resource: 
          - Fn::GetAtt:
            - pullTable
            - Arn
          - Fn::GetAtt:
            - issueTable
            - Arn

  environment:
    PR_QUEUE: !Ref PullRequestQueue
    REPO_QUEUE: !Ref RepoQueue
    ISSUE_QUEUE: !Ref IssueQueue
    PULL_TABLE: !Select [1, !Split ['/', !GetAtt pullTable.Arn]] 
    ISSUE_TABLE: !Select [1, !Split ['/', !GetAtt issueTable.Arn]] 
    appId: ${env:appId}
    privateKey: ${env:privateKey}
    DEBUG: "*"

functions:
  queryPR:
    handler: src/inputHandler.sqsPRQueueHandler
    maximumRetryAttempts: 0
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PullRequestQueue
              - Arn

  queryIssue:
    handler: src/inputHandler.sqsIssueQueueHandler
    maximumRetryAttempts: 0
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - IssueQueue
              - Arn

  queryRepo:
    timeout: 600
    maximumRetryAttempts: 0
    handler: src/inputHandler.sqsRepoQueueHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - RepoQueue
              - Arn

  queryRepoHttp:
    handler: src/inputHandler.httpQueryRepoHandler
    events:
      - httpApi:
          path: /queryrepo/{installationId}/{owner}/{repo}
          method: GET

package:
  exclude:
    - "tests/**"
    - "*.md"
    - "wallaby.js"
    - "jest.config.js"
    - "workspace.code-workspace/**"
    - "package-lock.json"
    - "node_modules/aws-sdk/**"
    - "coverage/**"
    - ".*"
    - ".*/**"

resources:
  Resources:
    RepoQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: seemyGithubRepo
    PullRequestQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: seemyGithubPullRequest
    IssueQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: seemyGithubIssue
    pullTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: seemyVCSpull
        KeySchema:
          - AttributeName: url
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: url
            AttributeType: S
          - AttributeName: id
            AttributeType: "N"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 2
    issueTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: seemyVCSissue
        KeySchema:
          - AttributeName: url
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: url
            AttributeType: S
          - AttributeName: id
            AttributeType: "N"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 2

  # Outputs:
  #   outputs:
  #     Description: Output
  #     Value:
  #       'Ref': [usersTable, Arn]
  #     Export:
  #       Name: ${self:service}:${opt:stage}:outputs # see Fn::ImportVa